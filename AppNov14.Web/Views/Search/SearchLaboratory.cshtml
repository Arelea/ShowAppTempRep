@using AppNov14.Helpers
@model AppNov14.Web.ViewModels.Search.CommonSearchViewModel

@{
    Layout = "_TableLayout";
    var items = this.Model.Items;
}

<div class="table-inputs">
    <form asp-action="SearchLaboratory">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-row">
            <div class="form-group col-md-4">
                <label asp-for="@this.Model.Form.DateStart" class="control-label">От</label>
                <input asp-for="@this.Model.Form.DateStart" type="date" min="2019-01-01" max="2050-12-31" class="form-control" />
                <span asp-validation-for="@this.Model.Form.DateStart" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label asp-for="@this.Model.Form.DateFinish" class="control-label">До</label>
                <input asp-for="@this.Model.Form.DateFinish" type="date" min="2019-01-01" max="2050-12-31" class="form-control" />
                <span asp-validation-for="@this.Model.Form.DateFinish" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label asp-for="@this.Model.Form.Id" class="control-label">Id</label>
                <input asp-for="@this.Model.Form.Id" class="form-control" />
                <span asp-validation-for="@this.Model.Form.Id" class="text-danger"></span>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-4 show-mode-select-list">
                <label asp-for="@this.Model.Form.ShowMode" class="control-label">Действие</label>
                <select asp-for="@this.Model.Form.ShowMode" class="form-control" asp-items="@(new SelectList(this.Model.ShowModeList, "Value", "Text"))"></select>
                <span asp-validation-for="@this.Model.Form.ShowMode" class="text-danger"></span>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-4">
                <label asp-for="@this.Model.Form.Type" class="control-label">Тип материала</label>
                <select asp-for="@this.Model.Form.Type" class="form-control" asp-items="@(new SelectList(this.Model.TypesList, "Value", "Text"))"></select>
                <span asp-validation-for="@this.Model.Form.Type" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label asp-for="@this.Model.Form.SubType" class="control-label">Наименование типа материала</label>
                <select asp-for="@this.Model.Form.SubType" class="form-control" asp-items="@(new SelectList(this.Model.SubTypesList, "Value", "Text"))"></select>
                <span asp-validation-for="@this.Model.Form.SubType" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label asp-for="@this.Model.Form.Provider" class="control-label">Поставщик</label>
                <select asp-for="@this.Model.Form.Provider" class="form-control" asp-items="@(new SelectList(this.Model.ProviderList, "Value", "Text"))"></select>
                <span asp-validation-for="@this.Model.Form.Provider" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4">
                <label asp-for="@this.Model.Form.Manufacturer" class="control-label">Производитель</label>
                <select asp-for="@this.Model.Form.Manufacturer" class="form-control" asp-items="@(new SelectList(this.Model.ManufacturerList, "Value", "Text"))"></select>
                <span asp-validation-for="@this.Model.Form.Manufacturer" class="text-danger"></span>
            </div>
        </div>
        <div class="form-row">
            <div class="form-group col-md-4">
                <label asp-for="@this.Model.Form.Index" class="control-label">Паспорт</label>
                <input asp-for="@this.Model.Form.Index" class="form-control" />
                <span asp-validation-for="@this.Model.Form.Index" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4 document-select-list d-none">
                <label asp-for="@this.Model.Form.Document" class="control-label">Наименование партии</label>
                <select asp-for="@this.Model.Form.Document" class="form-control" asp-items="@(new SelectList(this.Model.ConsignmentTypesList, "Value", "Text"))"></select>
                <span asp-validation-for="@this.Model.Form.Document" class="text-danger"></span>
            </div>
            <div class="form-group col-md-4 document-number-select-list d-none">
                <label asp-for="@this.Model.Form.DocumentNumber" class="control-label">Номер партии</label>
                <select asp-for="@this.Model.Form.DocumentNumber" class="form-control" asp-items="@(new SelectList(this.Model.ConsignmentNumbersList, "Value", "Text"))"></select>
                <span asp-validation-for="@this.Model.Form.DocumentNumber" class="text-danger"></span>
            </div>
        </div>
        <div class="form-row input-btn-group">
            <div class="form-group submit-btn">
                <input type="submit" value="Найти" class="btn btn-primary-submit">
            </div>
            <div class="form-group child-btn">
                <button class="btn btn-primary-warn btn-clear-filters">
                    <span>Очистить фильтры</span>
                </button>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<div class="table-wrapper">
    @if (items == null || !items.Any())
    {
        <div class="empty-result">
            <span>Записи не найдены</span>
        </div>
    }
    else
    {
        <table align="center" class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>
                        #Id
                    </th>
                    <th>
                        Действие
                    </th>
                    <th>
                        Тип материала
                    </th>
                    <th>
                        Наименование типа материала
                    </th>
                    <th>
                        Поставщик
                    </th>
                    <th>
                        Производитель
                    </th>
                    <th>
                        Количество
                    </th>
                    <th>
                        Остатки
                    </th>
                    <th>
                        Наименование партии
                    </th>
                    <th>
                        Номер
                    </th>
                    <th>
                        Паспорт
                    </th>
                    <th>
                        Дата
                    </th>
                    <th>
                        Имя сотрудника
                    </th>
                    <th>
                        Авто дата
                    </th>
                    <th>
                        Примечание
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in items)
                {
                    <tr class="@(item.OperationType == RawActionTypes.Replenishment ? "edit-list-tr-replenish" : "edit-list-tr-writeoff")">
                        <td>
                            @item.Id
                        </td>
                        <td>
                            @{
                                RenderOperationType(item.OperationType);
                            }
                        </td>
                        <td>
                            @item.Type
                        </td>
                        <td>
                            @item.SubType
                        </td>
                        <td>
                            @item.Provider
                        </td>
                        <td>
                            @item.Manufacturer
                        </td>
                        <td>
                            @item.Quantity
                        </td>
                        <td>
                            @item.Leftovers
                        </td>
                        <td>
                            @item.Document
                        </td>
                        <td>
                            @item.DocumentNumber
                        </td>
                        <td>
                            @item.Indexation
                        </td>
                        <td>
                            @item.DocDate
                        </td>
                        <td>
                            @item.Employee
                        </td>
                        <td>
                            @item.AutoDate
                        </td>
                        <td>
                            @item.Remarks
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@{
    void RenderOperationType(int operationType)
    {
        @if (operationType == RawActionTypes.Replenishment)
        {
            Write("Пополнение");
        }
        else if (operationType == RawActionTypes.WriteOff)
        {
            Write("Списание");
        }
    }
}

<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/jquery/dist/jquery-ui.js"></script>
<link href="~/jquery-ui.css" rel="stylesheet" />
<script>
    $(function () {
        var isReady = false;
        $("#Form_Type").change(function () {
            if ($(this).val() == "@null") {
                $("#Form_Type").val("@null");
                $("#Form_SubType").val("@null");

                $.ajax({
                    url: "/Search/GetFullSubTypeJson",
                    type: 'POST',
                    cache: false,
                    data: { mode: 2 },
                    dataType: 'json',
                    success: function (data) {
                        $("#Form_SubType").empty();
                        $.each(data, function (index, value) {
                            $("#Form_SubType").append($('<option/>', { value: value.value, text: value.value }));
                        });
                    }
                });
            }
            else {
                $.ajax({
                    url: "/Search/GetSubTypeByTypeJson",
                    type: 'POST',
                    cache: false,
                    data: { type: $('#Form_Type').val(), mode: 2 },
                    dataType: 'json',
                    success: function (data) {
                        $("#Form_SubType").empty();
                        $.each(data, function (index, value) {
                            $("#Form_SubType").append($('<option/>', { value: value.value, text: value.value }));
                        });
                    }
                });
            }
        });

        $('.show-mode-select-list select').change(function () {
            let $this = $(this);
            if ($this.val() == "4") {
                $('.document-select-list').addClass("d-none");
                $('.document-number-select-list').addClass("d-none");

                nullLisits(isReady);
            }

            if ($this.val() == "1") {
                $('.document-select-list').addClass("d-none");
                $('.document-number-select-list').addClass("d-none");

                nullLisits(isReady);           
            }

            if ($this.val() == "2") {
                $('.document-select-list').removeClass("d-none");
                $('.document-number-select-list').removeClass("d-none");

                nullLisits(isReady);

                $.ajax({
                    url: "/Search/GetLabConsignmentNumbersList",
                    type: 'POST',
                    cache: false,
                    dataType: 'json',
                    success: function (data) {
                        $("#Form_DocumentNumber").empty();
                        $.each(data, function (index, value) {
                            $("#Form_DocumentNumber").append($('<option/>', { value: value.value, text: value.value }));
                        });
                    }
                });
            }
        });

        $('.show-mode-select-list select').ready(function () {
            isReady = true;
            $('.show-mode-select-list select').change();
        });

        function nullLisits(isReady) {
            if (!isReady) {
                $('.document-select-list select').val("@null");
                $('.document-number-select-list select').val("@null");
                $('.line-select-list select').val("@null");
            }

            isReady = false;
        };

        $('.btn-clear-filters').click(function () {
            $('form').find('select, input').val("@null");
            $('form').submit();
        });
    });
</script>